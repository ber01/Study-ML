{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "             precision    recall  f1-score   support\n",
      "\n",
      "          0       0.86      1.00      0.92         6\n",
      "          1       1.00      1.00      1.00         4\n",
      "          2       1.00      1.00      1.00         2\n",
      "          3       1.00      1.00      1.00         1\n",
      "          4       1.00      1.00      1.00         1\n",
      "          5       1.00      1.00      1.00         5\n",
      "          6       1.00      1.00      1.00         4\n",
      "          7       1.00      0.67      0.80         3\n",
      "          9       1.00      1.00      1.00         1\n",
      "         10       1.00      1.00      1.00         4\n",
      "         11       1.00      1.00      1.00         1\n",
      "         12       1.00      1.00      1.00         2\n",
      "         13       1.00      1.00      1.00         3\n",
      "         14       1.00      1.00      1.00         5\n",
      "         15       1.00      1.00      1.00         3\n",
      "         17       1.00      1.00      1.00         6\n",
      "         19       1.00      1.00      1.00         4\n",
      "         20       1.00      1.00      1.00         1\n",
      "         21       1.00      1.00      1.00         1\n",
      "         22       1.00      1.00      1.00         2\n",
      "         23       1.00      1.00      1.00         1\n",
      "         24       1.00      1.00      1.00         2\n",
      "         25       1.00      1.00      1.00         2\n",
      "         26       1.00      1.00      1.00         4\n",
      "         27       1.00      1.00      1.00         1\n",
      "         28       1.00      1.00      1.00         2\n",
      "         29       1.00      1.00      1.00         3\n",
      "         30       1.00      1.00      1.00         4\n",
      "         31       1.00      1.00      1.00         3\n",
      "         32       1.00      1.00      1.00         3\n",
      "         33       1.00      1.00      1.00         2\n",
      "         34       1.00      1.00      1.00         3\n",
      "         35       1.00      1.00      1.00         1\n",
      "         36       1.00      1.00      1.00         3\n",
      "         37       1.00      1.00      1.00         3\n",
      "         38       1.00      1.00      1.00         1\n",
      "         39       1.00      1.00      1.00         3\n",
      "\n",
      "avg / total       0.99      0.99      0.99       100\n",
      "\n"
     ]
    }
   ],
   "source": [
    "from sklearn import datasets\n",
    "from sklearn.cross_validation import train_test_split\n",
    "from sklearn import svm\n",
    "from sklearn import metrics\n",
    "import matplotlib.pyplot as plt\n",
    "faces = datasets.fetch_olivetti_faces()\n",
    "X = faces.data\n",
    "y = faces.target\n",
    "\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=0)\n",
    "\n",
    "clf = svm.SVC(kernel='linear')\n",
    "clf.fit(X_train, y_train)\n",
    "\n",
    "y_pred = clf.predict(X_test)\n",
    "\n",
    "print(metrics.classification_report(y_test, y_pred))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\nTkSuQmCC\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x20852383978>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(y_test, y_pred, c=y_test)\n",
    "plt.show()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
